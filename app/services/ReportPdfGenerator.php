<?php

class ReportPdfGenerator extends TCPDF {
	
	protected $business;
	protected $user;
	protected $pdf;
	protected $img_path = 'images/pdf';
	protected $report_pages = [
			'3'	=> ['section' => '1', 'title' => 'Introduction'],
			'4'	=> ['section' => '2', 'title' => 'Summary of Results'],
			'6'	=> ['section' => '3', 'title' => 'Features of Each Option'],
			'11'	=> ['section' => '-', 'title' => 'Disclaimer'],
			'12'	=> ['section' => '-', 'title' => 'Appendix 1 – Summary of results '],
	];
	
		
	public function __construct()
	{
		parent::__construct(PDF_PAGE_ORIENTATION, PDF_UNIT, array(215.9,279.4), true, 'UTF-8', false);

	//	$this->business = $business;
		$this->user = Session::get('practicepro_user');
	}

	public function Header() 
	{
		if ($this->getNumPages() == 1) {
			return;					
		} 

		$pagetext = intval($this->getAliasNumPage());
		$header_title = 'REMUNERATION STRATEGIES – TAX SAVING REPORT';
		if ($this->getNumPages() == 2) {
			
			$pagetext = '';
			$header_title = 'Table of Contents';
		} 
		else {
			$t = intval($this->getAliasNbPages());
			$p = intval($this->getAliasNumPage());
			
			$pagetext = $this->getNumPages() - 2;
		}

		$img = ($this->CurOrientation == 'P' ? 'head-bg-blue.jpg' : 'head-bg-l.jpg');
		$w = ($this->CurOrientation == 'P ' ? 215.9:279.4);
	
		$this->Image($this->img_path . '/' . $img, 0, 0, $w, 25.4, 'JPEG', NULL, NULL, 2);
		
		$this->setTextColor(255, 204, 51);			
		$this->SetFont('rockb', '', 18, '', true);
		$this->MultiCell(190, 5, $header_title, 0, 'C', 0, 0, '', 8, true);
		$this->SetFont('rockb', '', 9, '', true);
		$this->MultiCell(0, 5, $pagetext, 0, 'R', 0, 0, '', 15, true);
	}

	public function Footer() 
	{
		if ($this->getNumPages() == 1) {
			return;					
		} 

		$this->SetY(-24);	
		$this->setTextColor(185, 139, 55);
		$this->SetFont('frabk', '', 10, '', true);

		$this->MultiCell(0, 5, 'Generated by Pro Media Consultants', 0, 'R', 0, 0, '', 270, true);
	}
	
	public function setupPdf($params = [])
	{
		
		// set document information
		$this->SetCreator('');
		$this->SetAuthor('Pro Media Consultants');
		$this->SetTitle('REMUNERATION PLANNING Tax Saving Report');
		$this->SetSubject('PDF Export');

		// set header and footer fonts
		$this->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
		$this->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

		// set default monospaced font
		$this->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

		// set margins
		$this->SetMargins(PDF_MARGIN_LEFT, 10, PDF_MARGIN_RIGHT);
		$this->SetHeaderMargin(8);
		$this->SetFooterMargin(1);		

		// set auto page breaks
		$this->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

		// set image scale factor
		$this->setImageScale(PDF_IMAGE_SCALE_RATIO);

		// set some language-dependent strings (optional)
		if (@file_exists(dirname(__FILE__).'/lang/eng.php')) {
			require_once(dirname(__FILE__).'/lang/eng.php');
			$this->setLanguageArray($l);
		}

		// set font
		$this->setTextColor(0, 0, 0);
		
		$this->buildTableOfContentsPage();
		$this->buildIntroPage();
	//	$this->buildSummaryOfResultsPage();

		// reset pointer to the last page
		$this->lastPage();

		//Close and output PDF document
		$this->Output("Goodwill_Report.pdf", 'I');

	}

	public function buildCoverPage()
	{
		//do not print header and footer in cover page
		$this->setPrintHeader(false);
		$this->setPrintFooter(false);
		
		$this->AddPage();
		
		//pagebreak off to expand images
		$this->SetAutoPageBreak(false,0);
		
		$this->Image($this->img_path . '/cover-bg2.jpg', 0, 0, 215.9,279.4, 'JPEG',null ,null ,2);

		// Set some content to print
		$this->setTextColor(250, 230, 206);

		$this->SetFont('fradmcn', '', 15, '', true);
		$this->MultiCell(190, 5, 'STRICTLY PRIVATE AND CONFIDENTIAL', 0, 'C', 0, 0, '', 10, true);

		$this->SetFont('rockb', '', 24, '', true);
		$this->MultiCell(190, 5, 'REMUNERATION PLANNING', 0, 'C', 0, 0, '', 68, true);

		$this->SetFont('frabk', '', 24, '', true);
		$this->MultiCell(190, 5, 'Tax Saving Report', 0, 'C', 0, 0, '', 80, true);

		$this->SetFont('frabk', '', 16, '', true);
		$this->MultiCell(190, 5, 'How to get your money out of your company tax efficiently', 0, 'C', 0, 0, '', 94, true);

		$this->SetFont('frabk', '', 12, '', true);
		$this->MultiCell(190, 5, 'Prepared on ' . date('F jS, Y', time())  . ' by ' . $this->user->mh2_fname . ', ' . $this->user->mh2_lname, 0, 'C', 0, 0, '', 138, true);

		$this->setTextColor(250, 230, 206);
		$this->MultiCell(190, 5, $this->user->mh2_company_address, 0, 'C', 0, 0, '', 158, true);
		$this->MultiCell(190, 5, $this->user->town_city_country . ' ' . $this->user->postcode, 0, 'C', 0, 0, '', 165, true);
		$this->MultiCell(190, 5, $this->user->mh2_email, 0, 'C', 0, 0, '', 172, true);
		$this->MultiCell(190, 5, $this->user->phone, 0, 'C', 0, 0, '', 180, true);
		$this->MultiCell(190, 5, $this->user->web_url, 0, 'C', 0, 0, '', 188, true);

		$this->SetFont('fradmcn', '', 15, '', true);
		$this->setTextColor(204, 0, 0);
		$this->MultiCell(155, 5, 'CONTACT INFORMATION', 0, 'L', 0, 0, '', 240, true);

		$this->SetFont('frabk', '', 10, '', true);
		$this->setTextColor(250, 230, 206);


		$this->MultiCell(0, 5, $this->user->town_city_country . ' ' . $this->user->postcode, 0, 'R', 0, 0, '', 260, true); 

		//reset true to include header and footer for succeeding pages
		$this->setPrintHeader(true);
		$this->setPrintFooter(true);
		
		$this->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

	}

	public function buildTableOfContentsPage()
	{
		$this->AddPage();
		$this->SetLeftMargin(5);

		$html = View::make("pdf.pdf_styles")->render();
		$html .= View::make(
			"pdf.table_of_contents", 
			array('pages' => $this->report_pages)
		)->render();

	
		$this->SetMargins(10, PDF_MARGIN_TOP, 15.5);
		$this->writeHTML($html, true, false, true, false, '');
	}
	
	public function buildIntroPage($params = [])
	{
		$this->AddPage();
		$this->SetLeftMargin(5);

		$html = View::make("pdf.pdf_styles")->render();
		$html .= View::make(
			"pdf.intro" 
		)->render();

	
		$this->SetMargins(10, PDF_MARGIN_TOP, 15.5);
		$this->writeHTML($html, true, false, true, false, '');
	}

	public function generate($params = [])
	{
		$this->buildCoverPage();
		$this->setupPdf($params);
	}
}
